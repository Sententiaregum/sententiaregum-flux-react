/*
 * This file is part of the Sententiaregum project.
 *
 * (c) Maximilian Bosch <maximilian.bosch.27@gmail.com>
 * (c) Ben Bieler <benjaminbieler2014@gmail.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

'use strict';

import React from 'react';
import invariant from 'invariant';

/**
 * A simple helper function which provides access to the pure component.
 *
 * Components itself might be pure, but are modified by using the `subscribeStores` function. However, this makes
 * testing, especially `shallow rendering` more difficult, so a helper API
 * which provides the required access is necessary.
 *
 * @param {Object} connectedParent The connected parent which will be generated by the `subscribeStores` function.
 * @param {Object} props           The props for the function to test.
 *
 * @returns {React.Element} A newly created react.js element.
 */
export default (connectedParent, props) => {
  invariant(
    typeof connectedParent.wrapped !== 'undefined',
    'Invalid component given! The `pure()` function can\'t handle '
    + 'functions that were not built by `subsribeStores()` as they can\'t provide '
    + 'the wrapped component easily!'
  );

  return React.createElement(connectedParent.wrapped(), props);
};
